name: Deploy Semgrep

on:
  push:
    branches:
      - dev
      - test-workflow
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose environment (dev/beta/prod)'
        required: true
        default: 'dev'

jobs:
  deploy-semgrep:
    runs-on: self-hosted

    env:
      ENV: ${{ github.event.inputs.environment || 'dev' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.15.4'

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.30.5'

      - name: Set Namespace
        id: set-namespace
        run: echo "NAMESPACE=semgrep-${ENV}" >> $GITHUB_ENV

      - name: Create namespace if not exists
        run: |
          kubectl get ns ${{ env.NAMESPACE }} || kubectl create ns ${{ env.NAMESPACE }}

      - name: Deploy Semgrep with Helm
        shell: bash
        run: |
          echo "Deploying to environment: $ENV"
          case "$ENV" in
            dev)
              helm upgrade --install semgrep-scan ./k8s-jobs \
                -f environments/dev/values.yaml \
                -n ${{ env.NAMESPACE }}
              ;;
            beta)
              helm upgrade --install semgrep-scan ./k8s-jobs \
                -f environments/beta/values.yaml \
                --set token="${{ secrets.SEMGREP_TOKEN_BETA }}" \
                -n ${{ env.NAMESPACE }}
              ;;
            prod)
              helm upgrade --install semgrep-scan ./k8s-jobs \
                -f environments/prod/values.yaml \
                --set token="${{ secrets.SEMGREP_TOKEN_PROD }}" \
                -n ${{ env.NAMESPACE }}
              ;;
            *)
              echo "Invalid environment: $ENV"
              exit 1
              ;;
          esac

      - name: Wait for Semgrep Job to be Ready
        run: |
          kubectl wait --for=condition=complete job/semgrep-scan -n ${{ env.NAMESPACE }} --timeout=300s

      - name: List Semgrep Pods
        run: |
          kubectl get pods -n ${{ env.NAMESPACE }}

      - name: Print Semgrep UI Access Info (only for dev)
        if: env.ENV == 'dev'
        shell: bash
        run: |
          echo "Semgrep Job access:"
          echo "Minikube Service URL:"
          minikube service semgrep-scan -n ${{ env.NAMESPACE }} --url || echo "Minikube might not be available"
          echo "Manual Access Info:"
          minikube ip || echo "Check Minikube IP manually"
          kubectl get svc -n ${{ env.NAMESPACE }}